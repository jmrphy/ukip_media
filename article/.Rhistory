stargazer(as.data.frame(df$victim_initiated, df$victim_crime, df$victim_unarmed, df$defendant_pursued,
df$could_retreat, df$accused_weapon, df$deaths, df$witness,
df$physical_evidence, df$defendant_property, df$type, df$victim_race,
df$victim_gender, df$victim_age, df$accused_race, df$accused_gender,
df$accused_age, df$county, df$year),
summary=T)
stargazer(as.data.frame(df$victim_initiated, df$victim_crime, df$victim_unarmed, df$defendant_pursued,
df$could_retreat, df$accused_weapon, df$deaths, df$witness,
df$physical_evidence, df$defendant_property, df$type, df$victim_race,
df$victim_gender, df$victim_age, df$accused_race, df$accused_gender,
df$accused_age, df$county, df$year))
stargazer(df$victim_initiated, df$victim_crime, df$victim_unarmed, df$defendant_pursued,
df$could_retreat, df$accused_weapon, df$deaths, df$witness,
df$physical_evidence, df$defendant_property, df$type, df$victim_race,
df$victim_gender, df$victim_age, df$accused_race, df$accused_gender,
df$accused_age, df$county, df$year)
View(df)
summaryvars<-subset(df, select=("victim_initiated", "victim_crime", "victim_unarmed", "defendant_pursued",
"could_retreat", "accused_weapon", "deaths", "witness",
"physical_evidence", "defendant_property", "type", "victim_race",
"victim_gender", "victim_age", "accused_race", "accused_gender",
"accused_age", "county", "year")
summaryvars<-subset(df, select=c("victim_initiated", "victim_crime", "victim_unarmed", "defendant_pursued",
"could_retreat", "accused_weapon", "deaths", "witness",
"physical_evidence", "defendant_property", "type", "victim_race",
"victim_gender", "victim_age", "accused_race", "accused_gender",
"accused_age", "county", "year")
stargazer(summaryvars)
summaryvars<-subset(df, select=c("victim_initiated", "victim_crime", "victim_unarmed", "defendant_pursued",
"could_retreat", "accused_weapon", "deaths", "witness",
"physical_evidence", "defendant_property", "type", "victim_race",
"victim_gender", "victim_age", "accused_race", "accused_gender",
"accused_age", "county", "year"))
stargazer(summaryvars)
library(reporttools)
install.packages("reporttools")
tableContinuous(summaryvars[,sapply(summaryvars, is.numeric)], font.size=12)
library(reporttools)
tableContinuous(summaryvars[,sapply(summaryvars, is.numeric)], font.size=12)
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)], font.size=12)
?tableContinuous
?print.xtable.
?print.xtable
tableContinuous(summaryvars[,sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for numerical variables",
lab="Summary statistics for numerical variables")
tableContinuous(summaryvars[,sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for numerical variables",
lab="Summary statistics for numerical variables",
add.to.row = list(list(2),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
This is a description, blah, blah, blah, blah,  blah, blah,
blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,
blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,
blah, blah, blah, blah, blah, blah} \\\\"))
length(summaryvars[,sapply(summaryvars, is.numeric)])
tableContinuous(summaryvars[,sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for numerical variables",
lab="Summary statistics for numerical variables",
add.to.row = list(list(length(summaryvars[,sapply(summaryvars, is.numeric)])),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
This is a description, blah, blah, blah, blah,  blah, blah,
blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,
blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,
blah, blah, blah, blah, blah, blah} \\\\"))
tableContinuous(summaryvars[,sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for numerical variables",
lab="Summary statistics for numerical variables")
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(length(summaryvars[,!sapply(summaryvars, is.numeric)])),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
This is a description, blah, blah, blah, blah,  blah, blah,
blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,
blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,
blah, blah, blah, blah, blah, blah} \\\\"))
length(summaryvars[,!sapply(summaryvars, is.numeric)]
)
summaryvars<-subset(df, select=c("victim_initiated", "victim_crime", "victim_unarmed", "defendant_pursued",
"could_retreat", "accused_weapon", "deaths", "witness",
"physical_evidence", "defendant_property", "type", "victim_race",
"victim_gender", "victim_age", "accused_race", "accused_gender",
"accused_age", "year"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(length(summaryvars[,!sapply(summaryvars, is.numeric)])),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable "county" was omitted.} \\\\"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(length(summaryvars[,!sapply(summaryvars, is.numeric)])),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(2)),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(length(summaryvars[,!sapply(summaryvars, is.numeric)]),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
)
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(length(summaryvars[,!sapply(summaryvars, is.numeric)])),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(2),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
length(summaryvars[,!sapply(summaryvars, is.numeric)]
)
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(length(summaryvars[,!sapply(summaryvars, is.numeric)])),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(20),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(25),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(30),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(40),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
add.to.row = list(list(42),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
caption.placement = "top"
add.to.row = list(list(42),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
caption.placement = "top",
add.to.row = list(list(42),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
setwd("~/Dropbox/gh_projects/florida_syg")
summaryvars<-subset(df, select=c("victim_initiated", "victim_crime", "victim_unarmed", "defendant_pursued",
"could_retreat", "accused_weapon", "deaths", "witness",
"physical_evidence", "defendant_property", "type", "victim_race",
"victim_gender", "victim_age", "accused_race", "accused_gender",
"accused_age", "year"))
tableContinuous(summaryvars[,sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for numerical variables",
lab="Summary statistics for numerical variables")
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
caption.placement = "top",
add.to.row = list(list(42),
"\\hline  \\multicolumn{5}{L{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
tableNominal(summaryvars[,!sapply(summaryvars, is.numeric)],
stats = c("n", "min", "median", "mean", "max", "s", "na"),
cap="Summary statistics for categorical variables",
lab="Summary statistics for categorical variables",
caption.placement = "top",
add.to.row = list(list(42),
"\\hline  \\multicolumn{5}{l{8.5cm}}{\\textbf{Note: }
The variable county was omitted.} \\\\"))
install.packages("lubridate")
require(timeSeries)
require(tseries)
require(reshape2)
require(scales)
require(vars)
require(car)
require(dynlm)
require(stargazer)
require(sandwich)
require(forecast)
?interpNA
??interpNA
?na.omit
??na.omit
?interpNA
install.packages("timeSeries")
require(timeSeries)
?interpNA
#setwd("C:/Users/Daniel/Dropbox/ukip_media/article")
setwd("~/Dropbox/gh_projects/ukip_media/article")
#df<-read.csv("C:/Users/Daniel/Dropbox/ukip_media/data/ukip_media.csv")
df<-read.csv("~/Dropbox/gh_projects/ukip_media/data/ukip_media.csv")
df$Date<-mdy(df$Date)
df$UKIP.Vote<-interpNA(df$UKIP.Vote, method = "linear")
unscaled<-df
modelvars<-df[c("Date", "UKIP.Vote", "UKIP.Articles", "General.Election2005", "General.Election2010",
"General.Election2015", "Euro.Election2004","Euro.Election2009", "Euro.Election2014")]
cbbPalette <- c("#D55E00", "#0072B2","#009E73","#999999", "#56B4E9","#CC79A7")
ggplot(df, aes(x=Date, y=UKIP.Vote)) +
geom_line(colour="#0072B2", linetype=2) + theme_bw() + labs(y="Vote Intention (%)", x="") +
theme(axis.text.y = element_text(size=12.45)) +
labs(title="Dynamics of UKIP Support and Media Coverage")
ggplot(df, aes(x=Date, y=UKIP.Articles)) +
geom_line(colour="#D55E00", linetype=1) + theme_bw() + labs(y="Articles", x="") +
theme(axis.text.y = element_text(size=7.25))
require(lubridate)
require(ggplot2)
require(timeSeries)
require(tseries)
require(reshape2)
require(scales)
require(vars)
require(car)
require(dynlm)
require(stargazer)
require(sandwich)
require(forecast)
#setwd("C:/Users/Daniel/Dropbox/ukip_media/article")
setwd("~/Dropbox/gh_projects/ukip_media/article")
#df<-read.csv("C:/Users/Daniel/Dropbox/ukip_media/data/ukip_media.csv")
df<-read.csv("~/Dropbox/gh_projects/ukip_media/data/ukip_media.csv")
df$Date<-mdy(df$Date)
df$UKIP.Vote<-interpNA(df$UKIP.Vote, method = "linear")
unscaled<-df
modelvars<-df[c("Date", "UKIP.Vote", "UKIP.Articles", "General.Election2005", "General.Election2010",
"General.Election2015", "Euro.Election2004","Euro.Election2009", "Euro.Election2014")]
cbbPalette <- c("#D55E00", "#0072B2","#009E73","#999999", "#56B4E9","#CC79A7")
ggplot(df, aes(x=Date, y=UKIP.Vote)) +
geom_line(colour="#0072B2", linetype=2) + theme_bw() + labs(y="Vote Intention (%)", x="") +
theme(axis.text.y = element_text(size=12.45)) +
labs(title="Dynamics of UKIP Support and Media Coverage")
ggplot(df, aes(x=Date, y=UKIP.Articles)) +
geom_line(colour="#D55E00", linetype=1) + theme_bw() + labs(y="Articles", x="") +
theme(axis.text.y = element_text(size=7.25))
df$UKIP.Articles<-scale(df$UKIP.Articles)[,]
df$UKIP.Vote<-scale(df$UKIP.Vote)[,]
graph.df<-subset(df, select=c("Date", "UKIP.Articles", "UKIP.Vote"))
molten<-melt(graph.df, id.vars=c("Date"))
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = date_format("%m/%Y"),
breaks = "6 months",
limits = as.Date(c('2004-02-01','2015-09-01'))) +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.text.y = element_text(size=12.45)) +
labs(x="Date", y="Standardized Values") +
theme(legend.position="none")
graph.df<-subset(df, select=c("Date", "UKIP.Articles", "UKIP.Vote"))
molten<-melt(graph.df, id.vars=c("Date"))
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = date_format("%m/%Y"),
breaks = "6 months",
limits = as.Date(c('2004-02-01','2015-09-01'))) +
)
graph.df<-subset(df, select=c("Date", "UKIP.Articles", "UKIP.Vote"))
molten<-melt(graph.df, id.vars=c("Date"))
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = date_format("%m/%Y"),
breaks = "6 months",
limits = as.Date(c('2004-02-01','2015-09-01')))
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = date_format("%m/%Y"),
breaks = "6 months",
limits = as.Date(c('2004-02-01','2015-09-01')))
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette)
+
scale_x_date(labels = date_format("%m/%Y")
breaks = "6 months",
limits = as.Date(c('2004-02-01','2015-09-01'))) +
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = date_format("%m/%Y"),
breaks = "6 months",
limits = as.Date(as.character('2004-02-01','2015-09-01')))
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("ggplot2")
install.packages("ggplot2")
require(lubridate)
require(ggplot2)
require(timeSeries)
require(tseries)
require(reshape2)
require(scales)
require(vars)
require(car)
require(dynlm)
require(stargazer)
require(sandwich)
require(forecast)
#setwd("C:/Users/Daniel/Dropbox/ukip_media/article")
setwd("~/Dropbox/gh_projects/ukip_media/article")
#df<-read.csv("C:/Users/Daniel/Dropbox/ukip_media/data/ukip_media.csv")
df<-read.csv("~/Dropbox/gh_projects/ukip_media/data/ukip_media.csv")
df$Date<-mdy(df$Date)
df$UKIP.Vote<-interpNA(df$UKIP.Vote, method = "linear")
unscaled<-df
modelvars<-df[c("Date", "UKIP.Vote", "UKIP.Articles", "General.Election2005", "General.Election2010",
"General.Election2015", "Euro.Election2004","Euro.Election2009", "Euro.Election2014")]
cbbPalette <- c("#D55E00", "#0072B2","#009E73","#999999", "#56B4E9","#CC79A7")
ggplot(df, aes(x=Date, y=UKIP.Vote)) +
geom_line(colour="#0072B2", linetype=2) + theme_bw() + labs(y="Vote Intention (%)", x="") +
theme(axis.text.y = element_text(size=12.45)) +
labs(title="Dynamics of UKIP Support and Media Coverage")
ggplot(df, aes(x=Date, y=UKIP.Articles)) +
geom_line(colour="#D55E00", linetype=1) + theme_bw() + labs(y="Articles", x="") +
theme(axis.text.y = element_text(size=7.25))
df$UKIP.Articles<-scale(df$UKIP.Articles)[,]
df$UKIP.Vote<-scale(df$UKIP.Vote)[,]
# Both series in one plot
graph.df<-subset(df, select=c("Date", "UKIP.Articles", "UKIP.Vote"))
molten<-melt(graph.df, id.vars=c("Date"))
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = date_format("%m/%Y"),
breaks = "6 months",
limits = as.Date(c('2004-02-01','2015-09-01'))) +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.text.y = element_text(size=12.45)) +
labs(x="Date", y="Standardized Values") +
theme(legend.position="none")
graph.df<-subset(df, select=c("Date", "UKIP.Articles", "UKIP.Vote"))
molten<-melt(graph.df, id.vars=c("Date"))
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = date_format("%m/%Y"),
breaks = "6 months",
limits = as.character(c('2004-02-01','2015-09-01'))) +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.text.y = element_text(size=12.45)) +
labs(x="Date", y="Standardized Values") +
theme(legend.position="none")
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = date_format("%m/%Y"),
breaks = "6 months",
limits = as.Date(c('2004-02-01','2015-09-01'))) +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.text.y = element_text(size=12.45)) +
labs(x="Date", y="Standardized Values") +
theme(legend.position="none")
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = date_format("%m/%Y"),
breaks = as.character("6 months"),
limits = as.Date(c('2004-02-01','2015-09-01'))) +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.text.y = element_text(size=12.45)) +
labs(x="Date", y="Standardized Values") +
theme(legend.position="none")
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = as.character(date_format("%m/%Y")),
breaks = "6 months",
limits = as.Date(c('2004-02-01','2015-09-01'))) +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.text.y = element_text(size=12.45)) +
labs(x="Date", y="Standardized Values") +
theme(legend.position="none")
?date_format
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = date_format("%Y-%m-%d"),
breaks = "6 months",
limits = as.Date(c('2004-02-01','2015-09-01'))) +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.text.y = element_text(size=12.45)) +
labs(x="Date", y="Standardized Values") +
theme(legend.position="none")
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = date_format("%m/%Y"),
limits = as.Date(c('2004-02-01','2015-09-01'))) +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.text.y = element_text(size=12.45)) +
labs(x="Date", y="Standardized Values") +
theme(legend.position="none")
ggplot(molten, aes(x=as.Date(Date))) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
scale_x_date(labels = date_format("%m/%Y"),
#               breaks = "6 months",
limits = as.Date(c('2004-02-01','2015-09-01'))) +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.text.y = element_text(size=12.45)) +
labs(x="Date", y="Standardized Values") +
theme(legend.position="none")
?VAR
??VAR
require(vars)
?VAR
??VAR
install.packages("timeSeries")
install.packages("timeSeries")
install.packages("tseries")
install.packages("reshape2")
install.packages("reshape2")
install.packages("sclaes")
install.packages("scales")
install.packages("scales")
install.packages("vars")
install.packages("car")
install.packages("car")
install.packages("dynlm")
install.packages("sandwich")
install.packages("sandwich")
install.packages("forecast")
require(Zelig)
?stargazer
stargazer(varmodel$varresult$UKIP.Vote, varmodel$varresult$UKIP.Articles,
column.labels=c("Vote", "Articles"),
dep.var.labels=c(""))
?VAR
require(vars)
?VAR
?granger
?causality
